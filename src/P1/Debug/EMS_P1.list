
EMS_P1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000364  0800036c  0001036c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000364  08000364  0001036c  2**0
                  CONTENTS
  4 .ARM          00000000  08000364  08000364  0001036c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000364  0800036c  0001036c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000364  08000364  00010364  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000368  08000368  00010368  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001036c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800036c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800036c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  0001036c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000ec  00000000  00000000  0001039a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000094  00000000  00000000  00010486  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000050  00000000  00000000  00010520  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000038  00000000  00000000  00010570  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000010a9  00000000  00000000  000105a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000439  00000000  00000000  00011651  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003e01  00000000  00000000  00011a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001588b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  00015908  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	0800034c 	.word	0x0800034c

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	0800034c 	.word	0x0800034c

08000238 <delay>:
#define GPIOB 0x40020400U
#define GPIOB_MODER 0x00U

#define GPIOB_ODR 0x14U

void delay(){
 8000238:	b480      	push	{r7}
 800023a:	b083      	sub	sp, #12
 800023c:	af00      	add	r7, sp, #0

	for (uint32_t i = 0; i < 500000; ++i) {
 800023e:	2300      	movs	r3, #0
 8000240:	607b      	str	r3, [r7, #4]
 8000242:	e003      	b.n	800024c <delay+0x14>
		asm("nop");
 8000244:	bf00      	nop
	for (uint32_t i = 0; i < 500000; ++i) {
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	3301      	adds	r3, #1
 800024a:	607b      	str	r3, [r7, #4]
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	4a04      	ldr	r2, [pc, #16]	; (8000260 <delay+0x28>)
 8000250:	4293      	cmp	r3, r2
 8000252:	d9f7      	bls.n	8000244 <delay+0xc>
	}

}
 8000254:	bf00      	nop
 8000256:	370c      	adds	r7, #12
 8000258:	46bd      	mov	sp, r7
 800025a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025e:	4770      	bx	lr
 8000260:	0007a11f 	.word	0x0007a11f

08000264 <main>:
int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	//ENABLE CLOCK
	*((volatile uint32_t*)(AHB1ENR+GPIOBEN)) |=(1 << 1);
 8000268:	4b0e      	ldr	r3, [pc, #56]	; (80002a4 <main+0x40>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a0d      	ldr	r2, [pc, #52]	; (80002a4 <main+0x40>)
 800026e:	f043 0302 	orr.w	r3, r3, #2
 8000272:	6013      	str	r3, [r2, #0]
	//CLEAR MODE
	*((volatile uint32_t*)(GPIOB+GPIOB_MODER)) |= (0b00000000000000000100000000000000);
 8000274:	4b0c      	ldr	r3, [pc, #48]	; (80002a8 <main+0x44>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a0b      	ldr	r2, [pc, #44]	; (80002a8 <main+0x44>)
 800027a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800027e:	6013      	str	r3, [r2, #0]


	for(;;){

		delay();
 8000280:	f7ff ffda 	bl	8000238 <delay>
		*((volatile uint32_t*)(GPIOB+GPIOB_ODR)) |=(1 << 7);
 8000284:	4b09      	ldr	r3, [pc, #36]	; (80002ac <main+0x48>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a08      	ldr	r2, [pc, #32]	; (80002ac <main+0x48>)
 800028a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800028e:	6013      	str	r3, [r2, #0]
		delay();
 8000290:	f7ff ffd2 	bl	8000238 <delay>
		*((volatile uint32_t*)(GPIOB+GPIOB_ODR)) &= ~(1 << 7);
 8000294:	4b05      	ldr	r3, [pc, #20]	; (80002ac <main+0x48>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	4a04      	ldr	r2, [pc, #16]	; (80002ac <main+0x48>)
 800029a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800029e:	6013      	str	r3, [r2, #0]
		delay();
 80002a0:	e7ee      	b.n	8000280 <main+0x1c>
 80002a2:	bf00      	nop
 80002a4:	40023830 	.word	0x40023830
 80002a8:	40020400 	.word	0x40020400
 80002ac:	40020414 	.word	0x40020414

080002b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b0:	480d      	ldr	r0, [pc, #52]	; (80002e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002b2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480d      	ldr	r0, [pc, #52]	; (80002ec <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490e      	ldr	r1, [pc, #56]	; (80002f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0e      	ldr	r2, [pc, #56]	; (80002f4 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0b      	ldr	r2, [pc, #44]	; (80002f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0b      	ldr	r4, [pc, #44]	; (80002fc <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002da:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002de:	f000 f811 	bl	8000304 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002e2:	f7ff ffbf 	bl	8000264 <main>

080002e6 <LoopForever>:

LoopForever:
    b LoopForever
 80002e6:	e7fe      	b.n	80002e6 <LoopForever>
  ldr   r0, =_estack
 80002e8:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80002ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f4:	0800036c 	.word	0x0800036c
  ldr r2, =_sbss
 80002f8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002fc:	2000001c 	.word	0x2000001c

08000300 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000300:	e7fe      	b.n	8000300 <ADC_IRQHandler>
	...

08000304 <__libc_init_array>:
 8000304:	b570      	push	{r4, r5, r6, lr}
 8000306:	4e0d      	ldr	r6, [pc, #52]	; (800033c <__libc_init_array+0x38>)
 8000308:	4c0d      	ldr	r4, [pc, #52]	; (8000340 <__libc_init_array+0x3c>)
 800030a:	1ba4      	subs	r4, r4, r6
 800030c:	10a4      	asrs	r4, r4, #2
 800030e:	2500      	movs	r5, #0
 8000310:	42a5      	cmp	r5, r4
 8000312:	d109      	bne.n	8000328 <__libc_init_array+0x24>
 8000314:	4e0b      	ldr	r6, [pc, #44]	; (8000344 <__libc_init_array+0x40>)
 8000316:	4c0c      	ldr	r4, [pc, #48]	; (8000348 <__libc_init_array+0x44>)
 8000318:	f000 f818 	bl	800034c <_init>
 800031c:	1ba4      	subs	r4, r4, r6
 800031e:	10a4      	asrs	r4, r4, #2
 8000320:	2500      	movs	r5, #0
 8000322:	42a5      	cmp	r5, r4
 8000324:	d105      	bne.n	8000332 <__libc_init_array+0x2e>
 8000326:	bd70      	pop	{r4, r5, r6, pc}
 8000328:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800032c:	4798      	blx	r3
 800032e:	3501      	adds	r5, #1
 8000330:	e7ee      	b.n	8000310 <__libc_init_array+0xc>
 8000332:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000336:	4798      	blx	r3
 8000338:	3501      	adds	r5, #1
 800033a:	e7f2      	b.n	8000322 <__libc_init_array+0x1e>
 800033c:	08000364 	.word	0x08000364
 8000340:	08000364 	.word	0x08000364
 8000344:	08000364 	.word	0x08000364
 8000348:	08000368 	.word	0x08000368

0800034c <_init>:
 800034c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034e:	bf00      	nop
 8000350:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000352:	bc08      	pop	{r3}
 8000354:	469e      	mov	lr, r3
 8000356:	4770      	bx	lr

08000358 <_fini>:
 8000358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035a:	bf00      	nop
 800035c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035e:	bc08      	pop	{r3}
 8000360:	469e      	mov	lr, r3
 8000362:	4770      	bx	lr
