
P2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000083c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009e4  080009ec  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009e4  080009e4  000109ec  2**0
                  CONTENTS
  4 .ARM          00000000  080009e4  080009e4  000109ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009e4  080009ec  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009e4  080009e4  000109e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009e8  080009e8  000109e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000004c  20000000  080009ec  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000004c  080009ec  0002004c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008e0  00000000  00000000  00010a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000024a  00000000  00000000  000112fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011548  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00011610  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000141c  00000000  00000000  000116b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000aa9  00000000  00000000  00012acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000051bc  00000000  00000000  00013575  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018731  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000264  00000000  00000000  000187ac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080009cc 	.word	0x080009cc

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080009cc 	.word	0x080009cc

080001e8 <delay_s>:

GPIO_Handle_t led_1;
GPIO_Handle_t led_2;
GPIO_Handle_t led_3;
GPIO_Handle_t user_button;
void delay_s(uint32_t _sec){
 80001e8:	b480      	push	{r7}
 80001ea:	b085      	sub	sp, #20
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]

	for (uint32_t i = 0; i < (1000000*_sec); ++i) {
 80001f0:	2300      	movs	r3, #0
 80001f2:	60fb      	str	r3, [r7, #12]
 80001f4:	e003      	b.n	80001fe <delay_s+0x16>
		asm("nop");
 80001f6:	bf00      	nop
	for (uint32_t i = 0; i < (1000000*_sec); ++i) {
 80001f8:	68fb      	ldr	r3, [r7, #12]
 80001fa:	3301      	adds	r3, #1
 80001fc:	60fb      	str	r3, [r7, #12]
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	4a05      	ldr	r2, [pc, #20]	; (8000218 <delay_s+0x30>)
 8000202:	fb02 f303 	mul.w	r3, r2, r3
 8000206:	68fa      	ldr	r2, [r7, #12]
 8000208:	429a      	cmp	r2, r3
 800020a:	d3f4      	bcc.n	80001f6 <delay_s+0xe>
	}

}
 800020c:	bf00      	nop
 800020e:	3714      	adds	r7, #20
 8000210:	46bd      	mov	sp, r7
 8000212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000216:	4770      	bx	lr
 8000218:	000f4240 	.word	0x000f4240

0800021c <EXTI0_IRQHandler>:
		}

}

//HANDLING IRQ FOR USER BUTTON
void EXTI0_IRQHandler(void){
 800021c:	b580      	push	{r7, lr}
 800021e:	af00      	add	r7, sp, #0
	GPIO_WriteToOutputPin(&led_1, GPIO_PIN_RESET);
 8000220:	2100      	movs	r1, #0
 8000222:	4808      	ldr	r0, [pc, #32]	; (8000244 <EXTI0_IRQHandler+0x28>)
 8000224:	f000 fb2a 	bl	800087c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(&led_2, GPIO_PIN_RESET);
 8000228:	2100      	movs	r1, #0
 800022a:	4807      	ldr	r0, [pc, #28]	; (8000248 <EXTI0_IRQHandler+0x2c>)
 800022c:	f000 fb26 	bl	800087c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(&led_3, GPIO_PIN_RESET);
 8000230:	2100      	movs	r1, #0
 8000232:	4806      	ldr	r0, [pc, #24]	; (800024c <EXTI0_IRQHandler+0x30>)
 8000234:	f000 fb22 	bl	800087c <GPIO_WriteToOutputPin>

	GPIO_IRQHandling(GPIO_PIN_NO_0); //CLEAR PA FOR USER_BUTTON PA0
 8000238:	2000      	movs	r0, #0
 800023a:	f000 fb59 	bl	80008f0 <GPIO_IRQHandling>
}
 800023e:	bf00      	nop
 8000240:	bd80      	pop	{r7, pc}
 8000242:	bf00      	nop
 8000244:	20000040 	.word	0x20000040
 8000248:	2000001c 	.word	0x2000001c
 800024c:	20000034 	.word	0x20000034

08000250 <main>:


int main(void)
{
 8000250:	b580      	push	{r7, lr}
 8000252:	b088      	sub	sp, #32
 8000254:	af00      	add	r7, sp, #0


	
	GPIO_PinConfig_t led_1_pin_config;
	led_1_pin_config.GPIO_PinMode = GPIO_MODE_OUT;
 8000256:	2301      	movs	r3, #1
 8000258:	767b      	strb	r3, [r7, #25]
	led_1_pin_config.GPIO_PinNumber = GPIO_PIN_NO_5;
 800025a:	2305      	movs	r3, #5
 800025c:	763b      	strb	r3, [r7, #24]
	led_1_pin_config.GPIO_PinOPType = GPIO_OP_TYPE_PP; //?
 800025e:	2300      	movs	r3, #0
 8000260:	773b      	strb	r3, [r7, #28]
	led_1_pin_config.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000262:	2300      	movs	r3, #0
 8000264:	76fb      	strb	r3, [r7, #27]
	led_1_pin_config.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000266:	2300      	movs	r3, #0
 8000268:	76bb      	strb	r3, [r7, #26]
	led_1.GPIO_PinConfig = led_1_pin_config;
 800026a:	4b4d      	ldr	r3, [pc, #308]	; (80003a0 <main+0x150>)
 800026c:	3304      	adds	r3, #4
 800026e:	f107 0218 	add.w	r2, r7, #24
 8000272:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000276:	6018      	str	r0, [r3, #0]
 8000278:	3304      	adds	r3, #4
 800027a:	7019      	strb	r1, [r3, #0]
	led_1.pGPIOx = GPIOB_BASEADDR;
 800027c:	4b48      	ldr	r3, [pc, #288]	; (80003a0 <main+0x150>)
 800027e:	4a49      	ldr	r2, [pc, #292]	; (80003a4 <main+0x154>)
 8000280:	601a      	str	r2, [r3, #0]
	GPIO_Init(&led_1);
 8000282:	4847      	ldr	r0, [pc, #284]	; (80003a0 <main+0x150>)
 8000284:	f000 f980 	bl	8000588 <GPIO_Init>

	
	GPIO_PinConfig_t led_2_pin_config;
	led_2_pin_config.GPIO_PinMode = GPIO_MODE_OUT;
 8000288:	2301      	movs	r3, #1
 800028a:	747b      	strb	r3, [r7, #17]
	led_2_pin_config.GPIO_PinNumber = GPIO_PIN_NO_7;
 800028c:	2307      	movs	r3, #7
 800028e:	743b      	strb	r3, [r7, #16]
	led_2_pin_config.GPIO_PinOPType = GPIO_OP_TYPE_PP; //?
 8000290:	2300      	movs	r3, #0
 8000292:	753b      	strb	r3, [r7, #20]
	led_2_pin_config.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000294:	2300      	movs	r3, #0
 8000296:	74fb      	strb	r3, [r7, #19]
	led_2_pin_config.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000298:	2300      	movs	r3, #0
 800029a:	74bb      	strb	r3, [r7, #18]
	led_2.GPIO_PinConfig = led_2_pin_config;
 800029c:	4b42      	ldr	r3, [pc, #264]	; (80003a8 <main+0x158>)
 800029e:	3304      	adds	r3, #4
 80002a0:	f107 0210 	add.w	r2, r7, #16
 80002a4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80002a8:	6018      	str	r0, [r3, #0]
 80002aa:	3304      	adds	r3, #4
 80002ac:	7019      	strb	r1, [r3, #0]
	led_2.pGPIOx = GPIOB_BASEADDR;
 80002ae:	4b3e      	ldr	r3, [pc, #248]	; (80003a8 <main+0x158>)
 80002b0:	4a3c      	ldr	r2, [pc, #240]	; (80003a4 <main+0x154>)
 80002b2:	601a      	str	r2, [r3, #0]
	GPIO_Init(&led_2);
 80002b4:	483c      	ldr	r0, [pc, #240]	; (80003a8 <main+0x158>)
 80002b6:	f000 f967 	bl	8000588 <GPIO_Init>

	
	GPIO_PinConfig_t led_3_pin_config;
	led_3_pin_config.GPIO_PinMode = GPIO_MODE_OUT;
 80002ba:	2301      	movs	r3, #1
 80002bc:	727b      	strb	r3, [r7, #9]
	led_3_pin_config.GPIO_PinNumber = GPIO_PIN_NO_9;
 80002be:	2309      	movs	r3, #9
 80002c0:	723b      	strb	r3, [r7, #8]
	led_3_pin_config.GPIO_PinOPType = GPIO_OP_TYPE_PP; //?
 80002c2:	2300      	movs	r3, #0
 80002c4:	733b      	strb	r3, [r7, #12]
	led_3_pin_config.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80002c6:	2300      	movs	r3, #0
 80002c8:	72fb      	strb	r3, [r7, #11]
	led_3_pin_config.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80002ca:	2300      	movs	r3, #0
 80002cc:	72bb      	strb	r3, [r7, #10]
	led_3.GPIO_PinConfig = led_3_pin_config;
 80002ce:	4b37      	ldr	r3, [pc, #220]	; (80003ac <main+0x15c>)
 80002d0:	3304      	adds	r3, #4
 80002d2:	f107 0208 	add.w	r2, r7, #8
 80002d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80002da:	6018      	str	r0, [r3, #0]
 80002dc:	3304      	adds	r3, #4
 80002de:	7019      	strb	r1, [r3, #0]
	led_3.pGPIOx = GPIOB_BASEADDR;
 80002e0:	4b32      	ldr	r3, [pc, #200]	; (80003ac <main+0x15c>)
 80002e2:	4a30      	ldr	r2, [pc, #192]	; (80003a4 <main+0x154>)
 80002e4:	601a      	str	r2, [r3, #0]
	GPIO_Init(&led_3);
 80002e6:	4831      	ldr	r0, [pc, #196]	; (80003ac <main+0x15c>)
 80002e8:	f000 f94e 	bl	8000588 <GPIO_Init>


	
	GPIO_PinConfig_t user_button_pin_config;
	user_button_pin_config.GPIO_PinMode = GPIO_MODE_IT_FT;
 80002ec:	2304      	movs	r3, #4
 80002ee:	707b      	strb	r3, [r7, #1]
	user_button_pin_config.GPIO_PinNumber = GPIO_PIN_NO_0;
 80002f0:	2300      	movs	r3, #0
 80002f2:	703b      	strb	r3, [r7, #0]
	user_button_pin_config.GPIO_PinOPType = GPIO_OP_TYPE_PP; //?
 80002f4:	2300      	movs	r3, #0
 80002f6:	713b      	strb	r3, [r7, #4]
	user_button_pin_config.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80002f8:	2301      	movs	r3, #1
 80002fa:	70fb      	strb	r3, [r7, #3]
	user_button_pin_config.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80002fc:	2300      	movs	r3, #0
 80002fe:	70bb      	strb	r3, [r7, #2]
	user_button.GPIO_PinConfig = user_button_pin_config;
 8000300:	4b2b      	ldr	r3, [pc, #172]	; (80003b0 <main+0x160>)
 8000302:	3304      	adds	r3, #4
 8000304:	463a      	mov	r2, r7
 8000306:	e892 0003 	ldmia.w	r2, {r0, r1}
 800030a:	6018      	str	r0, [r3, #0]
 800030c:	3304      	adds	r3, #4
 800030e:	7019      	strb	r1, [r3, #0]
	user_button.pGPIOx = GPIOA_BASEADDR;
 8000310:	4b27      	ldr	r3, [pc, #156]	; (80003b0 <main+0x160>)
 8000312:	4a28      	ldr	r2, [pc, #160]	; (80003b4 <main+0x164>)
 8000314:	601a      	str	r2, [r3, #0]

	GPIO_Init(&user_button);
 8000316:	4826      	ldr	r0, [pc, #152]	; (80003b0 <main+0x160>)
 8000318:	f000 f936 	bl	8000588 <GPIO_Init>

	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0,ENABLE);
 800031c:	2101      	movs	r1, #1
 800031e:	2006      	movs	r0, #6
 8000320:	f000 fad7 	bl	80008d2 <GPIO_IRQInterruptConfig>
	
	 for (;;){
		GPIO_WriteToOutputPin(&led_1, GPIO_PIN_SET);
 8000324:	2101      	movs	r1, #1
 8000326:	481e      	ldr	r0, [pc, #120]	; (80003a0 <main+0x150>)
 8000328:	f000 faa8 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_2, GPIO_PIN_RESET);
 800032c:	2100      	movs	r1, #0
 800032e:	481e      	ldr	r0, [pc, #120]	; (80003a8 <main+0x158>)
 8000330:	f000 faa4 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_3, GPIO_PIN_RESET);
 8000334:	2100      	movs	r1, #0
 8000336:	481d      	ldr	r0, [pc, #116]	; (80003ac <main+0x15c>)
 8000338:	f000 faa0 	bl	800087c <GPIO_WriteToOutputPin>
		delay_s(5);
 800033c:	2005      	movs	r0, #5
 800033e:	f7ff ff53 	bl	80001e8 <delay_s>
		GPIO_WriteToOutputPin(&led_1, GPIO_PIN_SET);
 8000342:	2101      	movs	r1, #1
 8000344:	4816      	ldr	r0, [pc, #88]	; (80003a0 <main+0x150>)
 8000346:	f000 fa99 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_2, GPIO_PIN_SET);
 800034a:	2101      	movs	r1, #1
 800034c:	4816      	ldr	r0, [pc, #88]	; (80003a8 <main+0x158>)
 800034e:	f000 fa95 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_3, GPIO_PIN_RESET);
 8000352:	2100      	movs	r1, #0
 8000354:	4815      	ldr	r0, [pc, #84]	; (80003ac <main+0x15c>)
 8000356:	f000 fa91 	bl	800087c <GPIO_WriteToOutputPin>
		delay_s(5);
 800035a:	2005      	movs	r0, #5
 800035c:	f7ff ff44 	bl	80001e8 <delay_s>
		GPIO_WriteToOutputPin(&led_1, GPIO_PIN_RESET);
 8000360:	2100      	movs	r1, #0
 8000362:	480f      	ldr	r0, [pc, #60]	; (80003a0 <main+0x150>)
 8000364:	f000 fa8a 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_2, GPIO_PIN_RESET);
 8000368:	2100      	movs	r1, #0
 800036a:	480f      	ldr	r0, [pc, #60]	; (80003a8 <main+0x158>)
 800036c:	f000 fa86 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_3, GPIO_PIN_SET);
 8000370:	2101      	movs	r1, #1
 8000372:	480e      	ldr	r0, [pc, #56]	; (80003ac <main+0x15c>)
 8000374:	f000 fa82 	bl	800087c <GPIO_WriteToOutputPin>
		delay_s(5);
 8000378:	2005      	movs	r0, #5
 800037a:	f7ff ff35 	bl	80001e8 <delay_s>
		GPIO_WriteToOutputPin(&led_1, GPIO_PIN_RESET);
 800037e:	2100      	movs	r1, #0
 8000380:	4807      	ldr	r0, [pc, #28]	; (80003a0 <main+0x150>)
 8000382:	f000 fa7b 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_2, GPIO_PIN_RESET);
 8000386:	2100      	movs	r1, #0
 8000388:	4807      	ldr	r0, [pc, #28]	; (80003a8 <main+0x158>)
 800038a:	f000 fa77 	bl	800087c <GPIO_WriteToOutputPin>
		GPIO_WriteToOutputPin(&led_3, GPIO_PIN_RESET);
 800038e:	2100      	movs	r1, #0
 8000390:	4806      	ldr	r0, [pc, #24]	; (80003ac <main+0x15c>)
 8000392:	f000 fa73 	bl	800087c <GPIO_WriteToOutputPin>
		delay_s(5);
 8000396:	2005      	movs	r0, #5
 8000398:	f7ff ff26 	bl	80001e8 <delay_s>
		GPIO_WriteToOutputPin(&led_1, GPIO_PIN_SET);
 800039c:	e7c2      	b.n	8000324 <main+0xd4>
 800039e:	bf00      	nop
 80003a0:	20000040 	.word	0x20000040
 80003a4:	40020400 	.word	0x40020400
 80003a8:	2000001c 	.word	0x2000001c
 80003ac:	20000034 	.word	0x20000034
 80003b0:	20000028 	.word	0x20000028
 80003b4:	40020000 	.word	0x40020000

080003b8 <GPIO_PeriClockControl>:

#include "stm32f407xx_gpio_driver.h"
#include "stm32f407xx.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80003b8:	b480      	push	{r7}
 80003ba:	b083      	sub	sp, #12
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
 80003c0:	460b      	mov	r3, r1
 80003c2:	70fb      	strb	r3, [r7, #3]

	if (EnorDi == ENABLE)
 80003c4:	78fb      	ldrb	r3, [r7, #3]
 80003c6:	2b01      	cmp	r3, #1
 80003c8:	d162      	bne.n	8000490 <GPIO_PeriClockControl+0xd8>
	{
		if (pGPIOx == GPIOA)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a64      	ldr	r2, [pc, #400]	; (8000560 <GPIO_PeriClockControl+0x1a8>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80003d2:	4b64      	ldr	r3, [pc, #400]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80003d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d6:	4a63      	ldr	r2, [pc, #396]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80003d8:	f043 0301 	orr.w	r3, r3, #1
 80003dc:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80003de:	e0b9      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a61      	ldr	r2, [pc, #388]	; (8000568 <GPIO_PeriClockControl+0x1b0>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d106      	bne.n	80003f6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80003e8:	4b5e      	ldr	r3, [pc, #376]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ec:	4a5d      	ldr	r2, [pc, #372]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80003ee:	f043 0302 	orr.w	r3, r3, #2
 80003f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f4:	e0ae      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4a5c      	ldr	r2, [pc, #368]	; (800056c <GPIO_PeriClockControl+0x1b4>)
 80003fa:	4293      	cmp	r3, r2
 80003fc:	d106      	bne.n	800040c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80003fe:	4b59      	ldr	r3, [pc, #356]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a58      	ldr	r2, [pc, #352]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000404:	f043 0304 	orr.w	r3, r3, #4
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040a:	e0a3      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a58      	ldr	r2, [pc, #352]	; (8000570 <GPIO_PeriClockControl+0x1b8>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d106      	bne.n	8000422 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000414:	4b53      	ldr	r3, [pc, #332]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000418:	4a52      	ldr	r2, [pc, #328]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800041a:	f043 0308 	orr.w	r3, r3, #8
 800041e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000420:	e098      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4a53      	ldr	r2, [pc, #332]	; (8000574 <GPIO_PeriClockControl+0x1bc>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d106      	bne.n	8000438 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800042a:	4b4e      	ldr	r3, [pc, #312]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800042c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042e:	4a4d      	ldr	r2, [pc, #308]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000430:	f043 0310 	orr.w	r3, r3, #16
 8000434:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000436:	e08d      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	4a4f      	ldr	r2, [pc, #316]	; (8000578 <GPIO_PeriClockControl+0x1c0>)
 800043c:	4293      	cmp	r3, r2
 800043e:	d106      	bne.n	800044e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000440:	4b48      	ldr	r3, [pc, #288]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000442:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000444:	4a47      	ldr	r2, [pc, #284]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000446:	f043 0320 	orr.w	r3, r3, #32
 800044a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044c:	e082      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	4a4a      	ldr	r2, [pc, #296]	; (800057c <GPIO_PeriClockControl+0x1c4>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d106      	bne.n	8000464 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000456:	4b43      	ldr	r3, [pc, #268]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000458:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045a:	4a42      	ldr	r2, [pc, #264]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800045c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000460:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000462:	e077      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	4a46      	ldr	r2, [pc, #280]	; (8000580 <GPIO_PeriClockControl+0x1c8>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d106      	bne.n	800047a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800046c:	4b3d      	ldr	r3, [pc, #244]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800046e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000470:	4a3c      	ldr	r2, [pc, #240]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000472:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000476:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000478:	e06c      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	4a41      	ldr	r2, [pc, #260]	; (8000584 <GPIO_PeriClockControl+0x1cc>)
 800047e:	4293      	cmp	r3, r2
 8000480:	d168      	bne.n	8000554 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000482:	4b38      	ldr	r3, [pc, #224]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000484:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000486:	4a37      	ldr	r2, [pc, #220]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000488:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800048c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800048e:	e061      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	4a33      	ldr	r2, [pc, #204]	; (8000560 <GPIO_PeriClockControl+0x1a8>)
 8000494:	4293      	cmp	r3, r2
 8000496:	d106      	bne.n	80004a6 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000498:	4b32      	ldr	r3, [pc, #200]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800049a:	691b      	ldr	r3, [r3, #16]
 800049c:	4a31      	ldr	r2, [pc, #196]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800049e:	f023 0301 	bic.w	r3, r3, #1
 80004a2:	6113      	str	r3, [r2, #16]
}
 80004a4:	e056      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4a2f      	ldr	r2, [pc, #188]	; (8000568 <GPIO_PeriClockControl+0x1b0>)
 80004aa:	4293      	cmp	r3, r2
 80004ac:	d106      	bne.n	80004bc <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80004ae:	4b2d      	ldr	r3, [pc, #180]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004b0:	691b      	ldr	r3, [r3, #16]
 80004b2:	4a2c      	ldr	r2, [pc, #176]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004b4:	f023 0302 	bic.w	r3, r3, #2
 80004b8:	6113      	str	r3, [r2, #16]
}
 80004ba:	e04b      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	4a2b      	ldr	r2, [pc, #172]	; (800056c <GPIO_PeriClockControl+0x1b4>)
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d106      	bne.n	80004d2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80004c4:	4b27      	ldr	r3, [pc, #156]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004c6:	691b      	ldr	r3, [r3, #16]
 80004c8:	4a26      	ldr	r2, [pc, #152]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004ca:	f023 0304 	bic.w	r3, r3, #4
 80004ce:	6113      	str	r3, [r2, #16]
}
 80004d0:	e040      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	4a26      	ldr	r2, [pc, #152]	; (8000570 <GPIO_PeriClockControl+0x1b8>)
 80004d6:	4293      	cmp	r3, r2
 80004d8:	d106      	bne.n	80004e8 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80004da:	4b22      	ldr	r3, [pc, #136]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004dc:	691b      	ldr	r3, [r3, #16]
 80004de:	4a21      	ldr	r2, [pc, #132]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004e0:	f023 0308 	bic.w	r3, r3, #8
 80004e4:	6113      	str	r3, [r2, #16]
}
 80004e6:	e035      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	4a22      	ldr	r2, [pc, #136]	; (8000574 <GPIO_PeriClockControl+0x1bc>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d106      	bne.n	80004fe <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80004f0:	4b1c      	ldr	r3, [pc, #112]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004f2:	691b      	ldr	r3, [r3, #16]
 80004f4:	4a1b      	ldr	r2, [pc, #108]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 80004f6:	f023 0310 	bic.w	r3, r3, #16
 80004fa:	6113      	str	r3, [r2, #16]
}
 80004fc:	e02a      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4a1d      	ldr	r2, [pc, #116]	; (8000578 <GPIO_PeriClockControl+0x1c0>)
 8000502:	4293      	cmp	r3, r2
 8000504:	d106      	bne.n	8000514 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000506:	4b17      	ldr	r3, [pc, #92]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000508:	691b      	ldr	r3, [r3, #16]
 800050a:	4a16      	ldr	r2, [pc, #88]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800050c:	f023 0320 	bic.w	r3, r3, #32
 8000510:	6113      	str	r3, [r2, #16]
}
 8000512:	e01f      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	4a19      	ldr	r2, [pc, #100]	; (800057c <GPIO_PeriClockControl+0x1c4>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d106      	bne.n	800052a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800051c:	4b11      	ldr	r3, [pc, #68]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800051e:	691b      	ldr	r3, [r3, #16]
 8000520:	4a10      	ldr	r2, [pc, #64]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000522:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000526:	6113      	str	r3, [r2, #16]
}
 8000528:	e014      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4a14      	ldr	r2, [pc, #80]	; (8000580 <GPIO_PeriClockControl+0x1c8>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d106      	bne.n	8000540 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000532:	4b0c      	ldr	r3, [pc, #48]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000534:	691b      	ldr	r3, [r3, #16]
 8000536:	4a0b      	ldr	r2, [pc, #44]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 8000538:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800053c:	6113      	str	r3, [r2, #16]
}
 800053e:	e009      	b.n	8000554 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	4a10      	ldr	r2, [pc, #64]	; (8000584 <GPIO_PeriClockControl+0x1cc>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d105      	bne.n	8000554 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000548:	4b06      	ldr	r3, [pc, #24]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800054a:	691b      	ldr	r3, [r3, #16]
 800054c:	4a05      	ldr	r2, [pc, #20]	; (8000564 <GPIO_PeriClockControl+0x1ac>)
 800054e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000552:	6113      	str	r3, [r2, #16]
}
 8000554:	bf00      	nop
 8000556:	370c      	adds	r7, #12
 8000558:	46bd      	mov	sp, r7
 800055a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800055e:	4770      	bx	lr
 8000560:	40020000 	.word	0x40020000
 8000564:	40023800 	.word	0x40023800
 8000568:	40020400 	.word	0x40020400
 800056c:	40020800 	.word	0x40020800
 8000570:	40020c00 	.word	0x40020c00
 8000574:	40021000 	.word	0x40021000
 8000578:	40021400 	.word	0x40021400
 800057c:	40021800 	.word	0x40021800
 8000580:	40021c00 	.word	0x40021c00
 8000584:	40022000 	.word	0x40022000

08000588 <GPIO_Init>:

// Implementieren Sie die weiteren Schritte. Denken Sie daran die Einträge eines Registers zurückzusetzen, bevor Sie einzelne Bits setzen
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000588:	b590      	push	{r4, r7, lr}
 800058a:	b083      	sub	sp, #12
 800058c:	af00      	add	r7, sp, #0
 800058e:	6078      	str	r0, [r7, #4]
	//Anschalten der Clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	2101      	movs	r1, #1
 8000596:	4618      	mov	r0, r3
 8000598:	f7ff ff0e 	bl	80003b8 <GPIO_PeriClockControl>

	//RESET MODE REG =  INPUT
	pGPIOHandle->pGPIOx->MODE_REG &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2)) & ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2) + 1);
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	681a      	ldr	r2, [r3, #0]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	791b      	ldrb	r3, [r3, #4]
 80005a6:	005b      	lsls	r3, r3, #1
 80005a8:	2101      	movs	r1, #1
 80005aa:	4099      	lsls	r1, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	791b      	ldrb	r3, [r3, #4]
 80005b0:	005b      	lsls	r3, r3, #1
 80005b2:	3301      	adds	r3, #1
 80005b4:	2001      	movs	r0, #1
 80005b6:	fa00 f303 	lsl.w	r3, r0, r3
 80005ba:	430b      	orrs	r3, r1
 80005bc:	43db      	mvns	r3, r3
 80005be:	4619      	mov	r1, r3
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	400a      	ands	r2, r1
 80005c6:	601a      	str	r2, [r3, #0]
	//Konfigurieren des OUTPUT-Modus
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	795b      	ldrb	r3, [r3, #5]
 80005cc:	2b03      	cmp	r3, #3
 80005ce:	d813      	bhi.n	80005f8 <GPIO_Init+0x70>
	{

		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT)
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	795b      	ldrb	r3, [r3, #5]
 80005d4:	2b01      	cmp	r3, #1
 80005d6:	f040 80b7 	bne.w	8000748 <GPIO_Init+0x1c0>
		{
			pGPIOHandle->pGPIOx->MODE_REG |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2));
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	681a      	ldr	r2, [r3, #0]
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	791b      	ldrb	r3, [r3, #4]
 80005e4:	005b      	lsls	r3, r3, #1
 80005e6:	2101      	movs	r1, #1
 80005e8:	fa01 f303 	lsl.w	r3, r1, r3
 80005ec:	4619      	mov	r1, r3
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	430a      	orrs	r2, r1
 80005f4:	601a      	str	r2, [r3, #0]
 80005f6:	e0a7      	b.n	8000748 <GPIO_Init+0x1c0>
		}
	}
	else
	{	
		SYSCFG_PCLK_EN();
 80005f8:	4b94      	ldr	r3, [pc, #592]	; (800084c <GPIO_Init+0x2c4>)
 80005fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005fc:	4a93      	ldr	r2, [pc, #588]	; (800084c <GPIO_Init+0x2c4>)
 80005fe:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000602:	6453      	str	r3, [r2, #68]	; 0x44
		// Interrupt Modus kommt im zweiten Teil
		// IRQ-Modus
		// 1. Konfiguration für Trigger auf fallenende, steigende oder beide Flanken
		//EXTI_FTSR
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT || pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	795b      	ldrb	r3, [r3, #5]
 8000608:	2b04      	cmp	r3, #4
 800060a:	d003      	beq.n	8000614 <GPIO_Init+0x8c>
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	795b      	ldrb	r3, [r3, #5]
 8000610:	2b06      	cmp	r3, #6
 8000612:	d10b      	bne.n	800062c <GPIO_Init+0xa4>
			EXTI->FTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000614:	4b8e      	ldr	r3, [pc, #568]	; (8000850 <GPIO_Init+0x2c8>)
 8000616:	68db      	ldr	r3, [r3, #12]
 8000618:	687a      	ldr	r2, [r7, #4]
 800061a:	7912      	ldrb	r2, [r2, #4]
 800061c:	4611      	mov	r1, r2
 800061e:	2201      	movs	r2, #1
 8000620:	408a      	lsls	r2, r1
 8000622:	4611      	mov	r1, r2
 8000624:	4a8a      	ldr	r2, [pc, #552]	; (8000850 <GPIO_Init+0x2c8>)
 8000626:	430b      	orrs	r3, r1
 8000628:	60d3      	str	r3, [r2, #12]
 800062a:	e02b      	b.n	8000684 <GPIO_Init+0xfc>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT || pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	795b      	ldrb	r3, [r3, #5]
 8000630:	2b05      	cmp	r3, #5
 8000632:	d003      	beq.n	800063c <GPIO_Init+0xb4>
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	795b      	ldrb	r3, [r3, #5]
 8000638:	2b06      	cmp	r3, #6
 800063a:	d10b      	bne.n	8000654 <GPIO_Init+0xcc>
			EXTI->RTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800063c:	4b84      	ldr	r3, [pc, #528]	; (8000850 <GPIO_Init+0x2c8>)
 800063e:	689b      	ldr	r3, [r3, #8]
 8000640:	687a      	ldr	r2, [r7, #4]
 8000642:	7912      	ldrb	r2, [r2, #4]
 8000644:	4611      	mov	r1, r2
 8000646:	2201      	movs	r2, #1
 8000648:	408a      	lsls	r2, r1
 800064a:	4611      	mov	r1, r2
 800064c:	4a80      	ldr	r2, [pc, #512]	; (8000850 <GPIO_Init+0x2c8>)
 800064e:	430b      	orrs	r3, r1
 8000650:	6093      	str	r3, [r2, #8]
 8000652:	e017      	b.n	8000684 <GPIO_Init+0xfc>
		}else{
			EXTI->FTSR &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); 
 8000654:	4b7e      	ldr	r3, [pc, #504]	; (8000850 <GPIO_Init+0x2c8>)
 8000656:	68db      	ldr	r3, [r3, #12]
 8000658:	687a      	ldr	r2, [r7, #4]
 800065a:	7912      	ldrb	r2, [r2, #4]
 800065c:	4611      	mov	r1, r2
 800065e:	2201      	movs	r2, #1
 8000660:	408a      	lsls	r2, r1
 8000662:	43d2      	mvns	r2, r2
 8000664:	4611      	mov	r1, r2
 8000666:	4a7a      	ldr	r2, [pc, #488]	; (8000850 <GPIO_Init+0x2c8>)
 8000668:	400b      	ands	r3, r1
 800066a:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800066c:	4b78      	ldr	r3, [pc, #480]	; (8000850 <GPIO_Init+0x2c8>)
 800066e:	689b      	ldr	r3, [r3, #8]
 8000670:	687a      	ldr	r2, [r7, #4]
 8000672:	7912      	ldrb	r2, [r2, #4]
 8000674:	4611      	mov	r1, r2
 8000676:	2201      	movs	r2, #1
 8000678:	408a      	lsls	r2, r1
 800067a:	43d2      	mvns	r2, r2
 800067c:	4611      	mov	r1, r2
 800067e:	4a74      	ldr	r2, [pc, #464]	; (8000850 <GPIO_Init+0x2c8>)
 8000680:	400b      	ands	r3, r1
 8000682:	6093      	str	r3, [r2, #8]
		}
		

		//2. Konfiguration des entsprechenden GPIO-Ports in SYSCFG_EXTICR
		SYSCFG->EXTICR[(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4)+1]  |=  (GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx) <<  (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4));
 8000684:	4a73      	ldr	r2, [pc, #460]	; (8000854 <GPIO_Init+0x2cc>)
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	791b      	ldrb	r3, [r3, #4]
 800068a:	089b      	lsrs	r3, r3, #2
 800068c:	b2d8      	uxtb	r0, r3
 800068e:	4603      	mov	r3, r0
 8000690:	3301      	adds	r3, #1
 8000692:	3302      	adds	r3, #2
 8000694:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	496e      	ldr	r1, [pc, #440]	; (8000858 <GPIO_Init+0x2d0>)
 800069e:	428b      	cmp	r3, r1
 80006a0:	d039      	beq.n	8000716 <GPIO_Init+0x18e>
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	496d      	ldr	r1, [pc, #436]	; (800085c <GPIO_Init+0x2d4>)
 80006a8:	428b      	cmp	r3, r1
 80006aa:	d032      	beq.n	8000712 <GPIO_Init+0x18a>
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	496b      	ldr	r1, [pc, #428]	; (8000860 <GPIO_Init+0x2d8>)
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d02b      	beq.n	800070e <GPIO_Init+0x186>
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	496a      	ldr	r1, [pc, #424]	; (8000864 <GPIO_Init+0x2dc>)
 80006bc:	428b      	cmp	r3, r1
 80006be:	d024      	beq.n	800070a <GPIO_Init+0x182>
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	4968      	ldr	r1, [pc, #416]	; (8000868 <GPIO_Init+0x2e0>)
 80006c6:	428b      	cmp	r3, r1
 80006c8:	d01d      	beq.n	8000706 <GPIO_Init+0x17e>
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	4967      	ldr	r1, [pc, #412]	; (800086c <GPIO_Init+0x2e4>)
 80006d0:	428b      	cmp	r3, r1
 80006d2:	d016      	beq.n	8000702 <GPIO_Init+0x17a>
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	4965      	ldr	r1, [pc, #404]	; (8000870 <GPIO_Init+0x2e8>)
 80006da:	428b      	cmp	r3, r1
 80006dc:	d00f      	beq.n	80006fe <GPIO_Init+0x176>
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	4964      	ldr	r1, [pc, #400]	; (8000874 <GPIO_Init+0x2ec>)
 80006e4:	428b      	cmp	r3, r1
 80006e6:	d008      	beq.n	80006fa <GPIO_Init+0x172>
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	4962      	ldr	r1, [pc, #392]	; (8000878 <GPIO_Init+0x2f0>)
 80006ee:	428b      	cmp	r3, r1
 80006f0:	d101      	bne.n	80006f6 <GPIO_Init+0x16e>
 80006f2:	2308      	movs	r3, #8
 80006f4:	e010      	b.n	8000718 <GPIO_Init+0x190>
 80006f6:	2300      	movs	r3, #0
 80006f8:	e00e      	b.n	8000718 <GPIO_Init+0x190>
 80006fa:	2307      	movs	r3, #7
 80006fc:	e00c      	b.n	8000718 <GPIO_Init+0x190>
 80006fe:	2306      	movs	r3, #6
 8000700:	e00a      	b.n	8000718 <GPIO_Init+0x190>
 8000702:	2305      	movs	r3, #5
 8000704:	e008      	b.n	8000718 <GPIO_Init+0x190>
 8000706:	2304      	movs	r3, #4
 8000708:	e006      	b.n	8000718 <GPIO_Init+0x190>
 800070a:	2303      	movs	r3, #3
 800070c:	e004      	b.n	8000718 <GPIO_Init+0x190>
 800070e:	2302      	movs	r3, #2
 8000710:	e002      	b.n	8000718 <GPIO_Init+0x190>
 8000712:	2301      	movs	r3, #1
 8000714:	e000      	b.n	8000718 <GPIO_Init+0x190>
 8000716:	2300      	movs	r3, #0
 8000718:	6879      	ldr	r1, [r7, #4]
 800071a:	7909      	ldrb	r1, [r1, #4]
 800071c:	f001 0103 	and.w	r1, r1, #3
 8000720:	408b      	lsls	r3, r1
 8000722:	461c      	mov	r4, r3
 8000724:	494b      	ldr	r1, [pc, #300]	; (8000854 <GPIO_Init+0x2cc>)
 8000726:	4603      	mov	r3, r0
 8000728:	3301      	adds	r3, #1
 800072a:	4322      	orrs	r2, r4
 800072c:	3302      	adds	r3, #2
 800072e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3  Aktivieren des EXTI Interrupts handling in IMR-Register
			EXTI->IMR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000732:	4b47      	ldr	r3, [pc, #284]	; (8000850 <GPIO_Init+0x2c8>)
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	687a      	ldr	r2, [r7, #4]
 8000738:	7912      	ldrb	r2, [r2, #4]
 800073a:	4611      	mov	r1, r2
 800073c:	2201      	movs	r2, #1
 800073e:	408a      	lsls	r2, r1
 8000740:	4611      	mov	r1, r2
 8000742:	4a43      	ldr	r2, [pc, #268]	; (8000850 <GPIO_Init+0x2c8>)
 8000744:	430b      	orrs	r3, r1
 8000746:	6013      	str	r3, [r2, #0]
	}

	//Konfigurieren des Output-Speeds
	//RESET SPEED REGISTER TO DEFAULT
	pGPIOHandle->pGPIOx->OUTPUT_SPEED &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2)) & ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2) + 1);
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	689a      	ldr	r2, [r3, #8]
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	791b      	ldrb	r3, [r3, #4]
 8000752:	005b      	lsls	r3, r3, #1
 8000754:	2101      	movs	r1, #1
 8000756:	4099      	lsls	r1, r3
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	791b      	ldrb	r3, [r3, #4]
 800075c:	005b      	lsls	r3, r3, #1
 800075e:	3301      	adds	r3, #1
 8000760:	2001      	movs	r0, #1
 8000762:	fa00 f303 	lsl.w	r3, r0, r3
 8000766:	430b      	orrs	r3, r1
 8000768:	43db      	mvns	r3, r3
 800076a:	4619      	mov	r1, r3
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	400a      	ands	r2, r1
 8000772:	609a      	str	r2, [r3, #8]

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed & 0b01)
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	799b      	ldrb	r3, [r3, #6]
 8000778:	f003 0301 	and.w	r3, r3, #1
 800077c:	2b00      	cmp	r3, #0
 800077e:	d00d      	beq.n	800079c <GPIO_Init+0x214>
	{
		pGPIOHandle->pGPIOx->OUTPUT_SPEED |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2)); //SPEED LOW BIT
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	689a      	ldr	r2, [r3, #8]
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	791b      	ldrb	r3, [r3, #4]
 800078a:	005b      	lsls	r3, r3, #1
 800078c:	2101      	movs	r1, #1
 800078e:	fa01 f303 	lsl.w	r3, r1, r3
 8000792:	4619      	mov	r1, r3
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	430a      	orrs	r2, r1
 800079a:	609a      	str	r2, [r3, #8]
	}
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed & 0b10)
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	799b      	ldrb	r3, [r3, #6]
 80007a0:	f003 0302 	and.w	r3, r3, #2
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d00e      	beq.n	80007c6 <GPIO_Init+0x23e>
	{
		pGPIOHandle->pGPIOx->OUTPUT_SPEED |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2) + 1); //SPEED HIGH BIT
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	689a      	ldr	r2, [r3, #8]
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	791b      	ldrb	r3, [r3, #4]
 80007b2:	005b      	lsls	r3, r3, #1
 80007b4:	3301      	adds	r3, #1
 80007b6:	2101      	movs	r1, #1
 80007b8:	fa01 f303 	lsl.w	r3, r1, r3
 80007bc:	4619      	mov	r1, r3
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	430a      	orrs	r2, r1
 80007c4:	609a      	str	r2, [r3, #8]
	}

	//Konfigurieren des Pull-up/down Settings
	//RESET PULL_UP_DOWN
	pGPIOHandle->pGPIOx->PULL_UP_DOWN &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2)) & ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2) + 1);
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	68da      	ldr	r2, [r3, #12]
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	791b      	ldrb	r3, [r3, #4]
 80007d0:	005b      	lsls	r3, r3, #1
 80007d2:	2101      	movs	r1, #1
 80007d4:	4099      	lsls	r1, r3
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	791b      	ldrb	r3, [r3, #4]
 80007da:	005b      	lsls	r3, r3, #1
 80007dc:	3301      	adds	r3, #1
 80007de:	2001      	movs	r0, #1
 80007e0:	fa00 f303 	lsl.w	r3, r0, r3
 80007e4:	430b      	orrs	r3, r1
 80007e6:	43db      	mvns	r3, r3
 80007e8:	4619      	mov	r1, r3
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	400a      	ands	r2, r1
 80007f0:	60da      	str	r2, [r3, #12]

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl & 0b01)
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	79db      	ldrb	r3, [r3, #7]
 80007f6:	f003 0301 	and.w	r3, r3, #1
 80007fa:	2b00      	cmp	r3, #0
 80007fc:	d00d      	beq.n	800081a <GPIO_Init+0x292>
	{
		pGPIOHandle->pGPIOx->PULL_UP_DOWN |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2)); //PUD LOW BIT
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	68da      	ldr	r2, [r3, #12]
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	791b      	ldrb	r3, [r3, #4]
 8000808:	005b      	lsls	r3, r3, #1
 800080a:	2101      	movs	r1, #1
 800080c:	fa01 f303 	lsl.w	r3, r1, r3
 8000810:	4619      	mov	r1, r3
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	430a      	orrs	r2, r1
 8000818:	60da      	str	r2, [r3, #12]
	}
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl & 0b10)
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	79db      	ldrb	r3, [r3, #7]
 800081e:	f003 0302 	and.w	r3, r3, #2
 8000822:	2b00      	cmp	r3, #0
 8000824:	d00e      	beq.n	8000844 <GPIO_Init+0x2bc>
	{
		pGPIOHandle->pGPIOx->PULL_UP_DOWN |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber * 2) + 1); //PUD HIGH BIT
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	681b      	ldr	r3, [r3, #0]
 800082a:	68da      	ldr	r2, [r3, #12]
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	791b      	ldrb	r3, [r3, #4]
 8000830:	005b      	lsls	r3, r3, #1
 8000832:	3301      	adds	r3, #1
 8000834:	2101      	movs	r1, #1
 8000836:	fa01 f303 	lsl.w	r3, r1, r3
 800083a:	4619      	mov	r1, r3
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	430a      	orrs	r2, r1
 8000842:	60da      	str	r2, [r3, #12]
	}
}
 8000844:	bf00      	nop
 8000846:	370c      	adds	r7, #12
 8000848:	46bd      	mov	sp, r7
 800084a:	bd90      	pop	{r4, r7, pc}
 800084c:	40023800 	.word	0x40023800
 8000850:	40013c00 	.word	0x40013c00
 8000854:	40013800 	.word	0x40013800
 8000858:	40020000 	.word	0x40020000
 800085c:	40020400 	.word	0x40020400
 8000860:	40020800 	.word	0x40020800
 8000864:	40020c00 	.word	0x40020c00
 8000868:	40021000 	.word	0x40021000
 800086c:	40021400 	.word	0x40021400
 8000870:	40021800 	.word	0x40021800
 8000874:	40021c00 	.word	0x40021c00
 8000878:	40022000 	.word	0x40022000

0800087c <GPIO_WriteToOutputPin>:
	return (uint16_t)(pGPIOx->INPUT_DATA_REG & 0xFFFF); //RETURN ONLY THE LOWER 16BIT
}

// Implementieren Sie die Funktionalität
void GPIO_WriteToOutputPin(GPIO_Handle_t *pGPIO_Handle, uint8_t Value)
{
 800087c:	b480      	push	{r7}
 800087e:	b083      	sub	sp, #12
 8000880:	af00      	add	r7, sp, #0
 8000882:	6078      	str	r0, [r7, #4]
 8000884:	460b      	mov	r3, r1
 8000886:	70fb      	strb	r3, [r7, #3]
	if (Value)
 8000888:	78fb      	ldrb	r3, [r7, #3]
 800088a:	2b00      	cmp	r3, #0
 800088c:	d00d      	beq.n	80008aa <GPIO_WriteToOutputPin+0x2e>
	{
		pGPIO_Handle->pGPIOx->OUTPUT_DATA_REG |= (1 << (pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 800088e:	687b      	ldr	r3, [r7, #4]
 8000890:	681b      	ldr	r3, [r3, #0]
 8000892:	695a      	ldr	r2, [r3, #20]
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	791b      	ldrb	r3, [r3, #4]
 8000898:	4619      	mov	r1, r3
 800089a:	2301      	movs	r3, #1
 800089c:	408b      	lsls	r3, r1
 800089e:	4619      	mov	r1, r3
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	681b      	ldr	r3, [r3, #0]
 80008a4:	430a      	orrs	r2, r1
 80008a6:	615a      	str	r2, [r3, #20]
	}
	else
	{
		pGPIO_Handle->pGPIOx->OUTPUT_DATA_REG &= ~(1 << (pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
	}
}
 80008a8:	e00d      	b.n	80008c6 <GPIO_WriteToOutputPin+0x4a>
		pGPIO_Handle->pGPIOx->OUTPUT_DATA_REG &= ~(1 << (pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	695a      	ldr	r2, [r3, #20]
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	791b      	ldrb	r3, [r3, #4]
 80008b4:	4619      	mov	r1, r3
 80008b6:	2301      	movs	r3, #1
 80008b8:	408b      	lsls	r3, r1
 80008ba:	43db      	mvns	r3, r3
 80008bc:	4619      	mov	r1, r3
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	400a      	ands	r2, r1
 80008c4:	615a      	str	r2, [r3, #20]
}
 80008c6:	bf00      	nop
 80008c8:	370c      	adds	r7, #12
 80008ca:	46bd      	mov	sp, r7
 80008cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d0:	4770      	bx	lr

080008d2 <GPIO_IRQInterruptConfig>:
	}
}

// ####################################### Teil IRQ ############################################################
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 80008d2:	b480      	push	{r7}
 80008d4:	b083      	sub	sp, #12
 80008d6:	af00      	add	r7, sp, #0
 80008d8:	4603      	mov	r3, r0
 80008da:	460a      	mov	r2, r1
 80008dc:	71fb      	strb	r3, [r7, #7]
 80008de:	4613      	mov	r3, r2
 80008e0:	71bb      	strb	r3, [r7, #6]
	}
	else
	{
		//ToDo: Programmieren der entsprechenden ICERx register
	}
}
 80008e2:	bf00      	nop
 80008e4:	370c      	adds	r7, #12
 80008e6:	46bd      	mov	sp, r7
 80008e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008ec:	4770      	bx	lr
	...

080008f0 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80008f0:	b480      	push	{r7}
 80008f2:	b083      	sub	sp, #12
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	71fb      	strb	r3, [r7, #7]
	// Abfrage und zurücksetzen des EXTI-PR bits
	if (EXTI->PR & (1 << PinNumber))
 80008fa:	4b0c      	ldr	r3, [pc, #48]	; (800092c <GPIO_IRQHandling+0x3c>)
 80008fc:	695b      	ldr	r3, [r3, #20]
 80008fe:	79fa      	ldrb	r2, [r7, #7]
 8000900:	2101      	movs	r1, #1
 8000902:	fa01 f202 	lsl.w	r2, r1, r2
 8000906:	4013      	ands	r3, r2
 8000908:	2b00      	cmp	r3, #0
 800090a:	d009      	beq.n	8000920 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= (1 << PinNumber);
 800090c:	4b07      	ldr	r3, [pc, #28]	; (800092c <GPIO_IRQHandling+0x3c>)
 800090e:	695b      	ldr	r3, [r3, #20]
 8000910:	79fa      	ldrb	r2, [r7, #7]
 8000912:	2101      	movs	r1, #1
 8000914:	fa01 f202 	lsl.w	r2, r1, r2
 8000918:	4611      	mov	r1, r2
 800091a:	4a04      	ldr	r2, [pc, #16]	; (800092c <GPIO_IRQHandling+0x3c>)
 800091c:	430b      	orrs	r3, r1
 800091e:	6153      	str	r3, [r2, #20]
	}
}
 8000920:	bf00      	nop
 8000922:	370c      	adds	r7, #12
 8000924:	46bd      	mov	sp, r7
 8000926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800092a:	4770      	bx	lr
 800092c:	40013c00 	.word	0x40013c00

08000930 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000930:	480d      	ldr	r0, [pc, #52]	; (8000968 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000932:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000934:	480d      	ldr	r0, [pc, #52]	; (800096c <LoopForever+0x6>)
  ldr r1, =_edata
 8000936:	490e      	ldr	r1, [pc, #56]	; (8000970 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000938:	4a0e      	ldr	r2, [pc, #56]	; (8000974 <LoopForever+0xe>)
  movs r3, #0
 800093a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800093c:	e002      	b.n	8000944 <LoopCopyDataInit>

0800093e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800093e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000940:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000942:	3304      	adds	r3, #4

08000944 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000944:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000946:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000948:	d3f9      	bcc.n	800093e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800094a:	4a0b      	ldr	r2, [pc, #44]	; (8000978 <LoopForever+0x12>)
  ldr r4, =_ebss
 800094c:	4c0b      	ldr	r4, [pc, #44]	; (800097c <LoopForever+0x16>)
  movs r3, #0
 800094e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000950:	e001      	b.n	8000956 <LoopFillZerobss>

08000952 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000952:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000954:	3204      	adds	r2, #4

08000956 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000956:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000958:	d3fb      	bcc.n	8000952 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800095a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800095e:	f000 f811 	bl	8000984 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000962:	f7ff fc75 	bl	8000250 <main>

08000966 <LoopForever>:

LoopForever:
    b LoopForever
 8000966:	e7fe      	b.n	8000966 <LoopForever>
  ldr   r0, =_estack
 8000968:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800096c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000970:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000974:	080009ec 	.word	0x080009ec
  ldr r2, =_sbss
 8000978:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800097c:	2000004c 	.word	0x2000004c

08000980 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000980:	e7fe      	b.n	8000980 <ADC_IRQHandler>
	...

08000984 <__libc_init_array>:
 8000984:	b570      	push	{r4, r5, r6, lr}
 8000986:	4e0d      	ldr	r6, [pc, #52]	; (80009bc <__libc_init_array+0x38>)
 8000988:	4c0d      	ldr	r4, [pc, #52]	; (80009c0 <__libc_init_array+0x3c>)
 800098a:	1ba4      	subs	r4, r4, r6
 800098c:	10a4      	asrs	r4, r4, #2
 800098e:	2500      	movs	r5, #0
 8000990:	42a5      	cmp	r5, r4
 8000992:	d109      	bne.n	80009a8 <__libc_init_array+0x24>
 8000994:	4e0b      	ldr	r6, [pc, #44]	; (80009c4 <__libc_init_array+0x40>)
 8000996:	4c0c      	ldr	r4, [pc, #48]	; (80009c8 <__libc_init_array+0x44>)
 8000998:	f000 f818 	bl	80009cc <_init>
 800099c:	1ba4      	subs	r4, r4, r6
 800099e:	10a4      	asrs	r4, r4, #2
 80009a0:	2500      	movs	r5, #0
 80009a2:	42a5      	cmp	r5, r4
 80009a4:	d105      	bne.n	80009b2 <__libc_init_array+0x2e>
 80009a6:	bd70      	pop	{r4, r5, r6, pc}
 80009a8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009ac:	4798      	blx	r3
 80009ae:	3501      	adds	r5, #1
 80009b0:	e7ee      	b.n	8000990 <__libc_init_array+0xc>
 80009b2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009b6:	4798      	blx	r3
 80009b8:	3501      	adds	r5, #1
 80009ba:	e7f2      	b.n	80009a2 <__libc_init_array+0x1e>
 80009bc:	080009e4 	.word	0x080009e4
 80009c0:	080009e4 	.word	0x080009e4
 80009c4:	080009e4 	.word	0x080009e4
 80009c8:	080009e8 	.word	0x080009e8

080009cc <_init>:
 80009cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ce:	bf00      	nop
 80009d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009d2:	bc08      	pop	{r3}
 80009d4:	469e      	mov	lr, r3
 80009d6:	4770      	bx	lr

080009d8 <_fini>:
 80009d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009da:	bf00      	nop
 80009dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009de:	bc08      	pop	{r3}
 80009e0:	469e      	mov	lr, r3
 80009e2:	4770      	bx	lr
